[
  {
    "type": "impl",
    "name": "InsuranceClaimsImpl",
    "interface_name": "starknet_indemnify::interfaces::interfaces::IClaim"
  },
  {
    "type": "struct",
    "name": "core::integer::u256",
    "members": [
      {
        "name": "low",
        "type": "core::integer::u128"
      },
      {
        "name": "high",
        "type": "core::integer::u128"
      }
    ]
  },
  {
    "type": "struct",
    "name": "core::byte_array::ByteArray",
    "members": [
      {
        "name": "data",
        "type": "core::array::Array::<core::bytes_31::bytes31>"
      },
      {
        "name": "pending_word",
        "type": "core::felt252"
      },
      {
        "name": "pending_word_len",
        "type": "core::integer::u32"
      }
    ]
  },
  {
    "type": "enum",
    "name": "starknet_indemnify::enums::enums::PolicyClass",
    "variants": [
      {
        "name": "TravelInsurance",
        "type": "()"
      },
      {
        "name": "BlockchainExploitInsurance",
        "type": "()"
      },
      {
        "name": "FireInsurance",
        "type": "()"
      },
      {
        "name": "MotorInsurance",
        "type": "()"
      },
      {
        "name": "PersonalAccidentInsurance",
        "type": "()"
      },
      {
        "name": "HealthInsurance",
        "type": "()"
      },
      {
        "name": "InvalidClassOfInsurance",
        "type": "()"
      }
    ]
  },
  {
    "type": "enum",
    "name": "starknet_indemnify::enums::enums::ClaimStatus",
    "variants": [
      {
        "name": "Submitted",
        "type": "()"
      },
      {
        "name": "UnderReview",
        "type": "()"
      },
      {
        "name": "Approved",
        "type": "()"
      },
      {
        "name": "Repudiated",
        "type": "()"
      },
      {
        "name": "Settled",
        "type": "()"
      },
      {
        "name": "InvalidStatus",
        "type": "()"
      }
    ]
  },
  {
    "type": "enum",
    "name": "starknet_indemnify::enums::enums::ClaimType",
    "variants": [
      {
        "name": "Small",
        "type": "()"
      },
      {
        "name": "Medium",
        "type": "()"
      },
      {
        "name": "Large",
        "type": "()"
      },
      {
        "name": "Catastrophic",
        "type": "()"
      },
      {
        "name": "Undetermined",
        "type": "()"
      },
      {
        "name": "InvalidClaimType",
        "type": "()"
      }
    ]
  },
  {
    "type": "enum",
    "name": "core::bool",
    "variants": [
      {
        "name": "False",
        "type": "()"
      },
      {
        "name": "True",
        "type": "()"
      }
    ]
  },
  {
    "type": "enum",
    "name": "starknet_indemnify::enums::enums::ClaimRepudiationReason",
    "variants": [
      {
        "name": "NonDisclosure",
        "type": "()"
      },
      {
        "name": "Misrepresentation",
        "type": "()"
      },
      {
        "name": "PolicyExclusion",
        "type": "()"
      },
      {
        "name": "FraudulentClaim",
        "type": "()"
      },
      {
        "name": "LapsedPolicy",
        "type": "()"
      },
      {
        "name": "PolicyTermsAndConditionsBreach",
        "type": "()"
      },
      {
        "name": "InsufficientDocumentation",
        "type": "()"
      },
      {
        "name": "IllegalClaim",
        "type": "()"
      },
      {
        "name": "LackOfInsurableInterest",
        "type": "()"
      },
      {
        "name": "NotRepudiated",
        "type": "()"
      },
      {
        "name": "InvalidRepudiationReason",
        "type": "()"
      }
    ]
  },
  {
    "type": "struct",
    "name": "starknet_indemnify::structs::structs::InsuranceClaimResponse",
    "members": [
      {
        "name": "claim_id",
        "type": "core::integer::u256"
      },
      {
        "name": "policy_id",
        "type": "core::integer::u256"
      },
      {
        "name": "proposal_id",
        "type": "core::integer::u256"
      },
      {
        "name": "claimant",
        "type": "core::starknet::contract_address::ContractAddress"
      },
      {
        "name": "claim_description",
        "type": "core::byte_array::ByteArray"
      },
      {
        "name": "claim_amount",
        "type": "core::integer::u256"
      },
      {
        "name": "approved_settlement_amount",
        "type": "core::integer::u256"
      },
      {
        "name": "alternative_account",
        "type": "core::starknet::contract_address::ContractAddress"
      },
      {
        "name": "policy_class",
        "type": "starknet_indemnify::enums::enums::PolicyClass"
      },
      {
        "name": "claim_status",
        "type": "starknet_indemnify::enums::enums::ClaimStatus"
      },
      {
        "name": "claim_type",
        "type": "starknet_indemnify::enums::enums::ClaimType"
      },
      {
        "name": "submission_date",
        "type": "core::integer::u64"
      },
      {
        "name": "updated_at",
        "type": "core::integer::u64"
      },
      {
        "name": "is_approved",
        "type": "core::bool"
      },
      {
        "name": "approved_at",
        "type": "core::integer::u64"
      },
      {
        "name": "is_repudiated",
        "type": "core::bool"
      },
      {
        "name": "repudiated_at",
        "type": "core::integer::u64"
      },
      {
        "name": "risk_analytics_approved",
        "type": "core::bool"
      },
      {
        "name": "governance_approved",
        "type": "core::bool"
      },
      {
        "name": "is_escalated",
        "type": "core::bool"
      },
      {
        "name": "escalation_reason",
        "type": "core::byte_array::ByteArray"
      },
      {
        "name": "claim_evidence_urls",
        "type": "core::array::Array::<core::byte_array::ByteArray>"
      },
      {
        "name": "repudiation_reason",
        "type": "starknet_indemnify::enums::enums::ClaimRepudiationReason"
      }
    ]
  },
  {
    "type": "interface",
    "name": "starknet_indemnify::interfaces::interfaces::IClaim",
    "items": [
      {
        "type": "function",
        "name": "file_claim",
        "inputs": [
          {
            "name": "policy_id",
            "type": "core::integer::u256"
          },
          {
            "name": "claimant",
            "type": "core::starknet::contract_address::ContractAddress"
          },
          {
            "name": "claim_description",
            "type": "core::byte_array::ByteArray"
          },
          {
            "name": "claim_amount",
            "type": "core::integer::u256"
          },
          {
            "name": "alternative_account",
            "type": "core::starknet::contract_address::ContractAddress"
          },
          {
            "name": "policy_class_code",
            "type": "core::integer::u8"
          },
          {
            "name": "proof_urls",
            "type": "core::array::Array::<core::byte_array::ByteArray>"
          }
        ],
        "outputs": [
          {
            "type": "core::integer::u256"
          }
        ],
        "state_mutability": "external"
      },
      {
        "type": "function",
        "name": "update_claim",
        "inputs": [
          {
            "name": "claim_id",
            "type": "core::integer::u256"
          },
          {
            "name": "policy_id",
            "type": "core::integer::u256"
          },
          {
            "name": "claimant",
            "type": "core::starknet::contract_address::ContractAddress"
          },
          {
            "name": "claim_description",
            "type": "core::byte_array::ByteArray"
          },
          {
            "name": "claim_amount",
            "type": "core::integer::u256"
          },
          {
            "name": "alternative_account",
            "type": "core::starknet::contract_address::ContractAddress"
          },
          {
            "name": "policy_class_code",
            "type": "core::integer::u8"
          },
          {
            "name": "proof_urls",
            "type": "core::array::Array::<core::byte_array::ByteArray>"
          }
        ],
        "outputs": [],
        "state_mutability": "external"
      },
      {
        "type": "function",
        "name": "get_claim_by_id",
        "inputs": [
          {
            "name": "claim_id",
            "type": "core::integer::u256"
          }
        ],
        "outputs": [
          {
            "type": "starknet_indemnify::structs::structs::InsuranceClaimResponse"
          }
        ],
        "state_mutability": "view"
      },
      {
        "type": "function",
        "name": "get_claim_evidence_urls_for_current_claim",
        "inputs": [
          {
            "name": "claim_id",
            "type": "core::integer::u256"
          }
        ],
        "outputs": [
          {
            "type": "core::array::Array::<core::byte_array::ByteArray>"
          }
        ],
        "state_mutability": "view"
      },
      {
        "type": "function",
        "name": "assess_claim_by_risk_analytics",
        "inputs": [
          {
            "name": "claim_id",
            "type": "core::integer::u256"
          },
          {
            "name": "risk_analytics_approved",
            "type": "core::bool"
          },
          {
            "name": "is_approved",
            "type": "core::bool"
          },
          {
            "name": "is_repudiated",
            "type": "core::bool"
          },
          {
            "name": "repudiation_reason_code",
            "type": "core::integer::u8"
          },
          {
            "name": "claim_status_code",
            "type": "core::integer::u8"
          },
          {
            "name": "claim_type_code",
            "type": "core::integer::u8"
          },
          {
            "name": "approved_settlement_amount",
            "type": "core::integer::u256"
          }
        ],
        "outputs": [],
        "state_mutability": "external"
      },
      {
        "type": "function",
        "name": "assess_claim_by_governance",
        "inputs": [
          {
            "name": "claim_id",
            "type": "core::integer::u256"
          },
          {
            "name": "governance_approved",
            "type": "core::bool"
          },
          {
            "name": "is_approved",
            "type": "core::bool"
          },
          {
            "name": "is_repudiated",
            "type": "core::bool"
          },
          {
            "name": "repudiation_reason_code",
            "type": "core::integer::u8"
          },
          {
            "name": "claim_status_code",
            "type": "core::integer::u8"
          },
          {
            "name": "claim_type_code",
            "type": "core::integer::u8"
          },
          {
            "name": "approved_settlement_amount",
            "type": "core::integer::u256"
          }
        ],
        "outputs": [],
        "state_mutability": "external"
      },
      {
        "type": "function",
        "name": "set_claim_as_settled",
        "inputs": [
          {
            "name": "claim_id",
            "type": "core::integer::u256"
          }
        ],
        "outputs": [],
        "state_mutability": "external"
      },
      {
        "type": "function",
        "name": "set_claim_as_repudiated",
        "inputs": [
          {
            "name": "claim_id",
            "type": "core::integer::u256"
          }
        ],
        "outputs": [],
        "state_mutability": "external"
      },
      {
        "type": "function",
        "name": "get_settled_claims",
        "inputs": [],
        "outputs": [
          {
            "type": "core::array::Array::<starknet_indemnify::structs::structs::InsuranceClaimResponse>"
          }
        ],
        "state_mutability": "view"
      },
      {
        "type": "function",
        "name": "get_repudiated_claims",
        "inputs": [],
        "outputs": [
          {
            "type": "core::array::Array::<starknet_indemnify::structs::structs::InsuranceClaimResponse>"
          }
        ],
        "state_mutability": "view"
      },
      {
        "type": "function",
        "name": "get_pending_claims",
        "inputs": [],
        "outputs": [
          {
            "type": "core::array::Array::<starknet_indemnify::structs::structs::InsuranceClaimResponse>"
          }
        ],
        "state_mutability": "view"
      },
      {
        "type": "function",
        "name": "get_escalated_claims",
        "inputs": [],
        "outputs": [
          {
            "type": "core::array::Array::<starknet_indemnify::structs::structs::InsuranceClaimResponse>"
          }
        ],
        "state_mutability": "view"
      },
      {
        "type": "function",
        "name": "get_all_claims",
        "inputs": [],
        "outputs": [
          {
            "type": "core::array::Array::<starknet_indemnify::structs::structs::InsuranceClaimResponse>"
          }
        ],
        "state_mutability": "view"
      },
      {
        "type": "function",
        "name": "escalate_claim",
        "inputs": [
          {
            "name": "claim_id",
            "type": "core::integer::u256"
          },
          {
            "name": "is_escalated",
            "type": "core::bool"
          },
          {
            "name": "escalation_reason",
            "type": "core::byte_array::ByteArray"
          },
          {
            "name": "proof_urls",
            "type": "core::array::Array::<core::byte_array::ByteArray>"
          }
        ],
        "outputs": [],
        "state_mutability": "external"
      },
      {
        "type": "function",
        "name": "settle_claim",
        "inputs": [
          {
            "name": "claim_id",
            "type": "core::integer::u256"
          }
        ],
        "outputs": [],
        "state_mutability": "external"
      },
      {
        "type": "function",
        "name": "set_treasury_address",
        "inputs": [
          {
            "name": "treasury_address",
            "type": "core::starknet::contract_address::ContractAddress"
          }
        ],
        "outputs": [],
        "state_mutability": "external"
      },
      {
        "type": "function",
        "name": "get_treasury_address",
        "inputs": [],
        "outputs": [
          {
            "type": "core::starknet::contract_address::ContractAddress"
          }
        ],
        "state_mutability": "view"
      },
      {
        "type": "function",
        "name": "set_proposal_form_address",
        "inputs": [
          {
            "name": "proposal_form_address",
            "type": "core::starknet::contract_address::ContractAddress"
          }
        ],
        "outputs": [],
        "state_mutability": "external"
      },
      {
        "type": "function",
        "name": "get_proposal_form_address",
        "inputs": [],
        "outputs": [
          {
            "type": "core::starknet::contract_address::ContractAddress"
          }
        ],
        "state_mutability": "view"
      },
      {
        "type": "function",
        "name": "set_policy_minting_address",
        "inputs": [
          {
            "name": "policy_minting_address",
            "type": "core::starknet::contract_address::ContractAddress"
          }
        ],
        "outputs": [],
        "state_mutability": "external"
      },
      {
        "type": "function",
        "name": "get_policy_minting_address",
        "inputs": [],
        "outputs": [
          {
            "type": "core::starknet::contract_address::ContractAddress"
          }
        ],
        "state_mutability": "view"
      },
      {
        "type": "function",
        "name": "set_governance_address",
        "inputs": [
          {
            "name": "governance_address",
            "type": "core::starknet::contract_address::ContractAddress"
          }
        ],
        "outputs": [],
        "state_mutability": "external"
      },
      {
        "type": "function",
        "name": "get_governance_address",
        "inputs": [],
        "outputs": [
          {
            "type": "core::starknet::contract_address::ContractAddress"
          }
        ],
        "state_mutability": "view"
      },
      {
        "type": "function",
        "name": "set_auto_approval_limit",
        "inputs": [
          {
            "name": "auto_approval_limit",
            "type": "core::integer::u256"
          }
        ],
        "outputs": [],
        "state_mutability": "external"
      },
      {
        "type": "function",
        "name": "get_auto_approval_limit",
        "inputs": [],
        "outputs": [
          {
            "type": "core::integer::u256"
          }
        ],
        "state_mutability": "view"
      },
      {
        "type": "function",
        "name": "set_max_claim_amount_payable",
        "inputs": [
          {
            "name": "max_claim_amount_payable",
            "type": "core::integer::u256"
          }
        ],
        "outputs": [],
        "state_mutability": "external"
      },
      {
        "type": "function",
        "name": "get_max_claim_amount_payable",
        "inputs": [],
        "outputs": [
          {
            "type": "core::integer::u256"
          }
        ],
        "state_mutability": "view"
      }
    ]
  },
  {
    "type": "impl",
    "name": "UpgradeableImpl",
    "interface_name": "openzeppelin_upgrades::interface::IUpgradeable"
  },
  {
    "type": "interface",
    "name": "openzeppelin_upgrades::interface::IUpgradeable",
    "items": [
      {
        "type": "function",
        "name": "upgrade",
        "inputs": [
          {
            "name": "new_class_hash",
            "type": "core::starknet::class_hash::ClassHash"
          }
        ],
        "outputs": [],
        "state_mutability": "external"
      }
    ]
  },
  {
    "type": "impl",
    "name": "AccessControlImpl",
    "interface_name": "openzeppelin_access::accesscontrol::interface::IAccessControl"
  },
  {
    "type": "interface",
    "name": "openzeppelin_access::accesscontrol::interface::IAccessControl",
    "items": [
      {
        "type": "function",
        "name": "has_role",
        "inputs": [
          {
            "name": "role",
            "type": "core::felt252"
          },
          {
            "name": "account",
            "type": "core::starknet::contract_address::ContractAddress"
          }
        ],
        "outputs": [
          {
            "type": "core::bool"
          }
        ],
        "state_mutability": "view"
      },
      {
        "type": "function",
        "name": "get_role_admin",
        "inputs": [
          {
            "name": "role",
            "type": "core::felt252"
          }
        ],
        "outputs": [
          {
            "type": "core::felt252"
          }
        ],
        "state_mutability": "view"
      },
      {
        "type": "function",
        "name": "grant_role",
        "inputs": [
          {
            "name": "role",
            "type": "core::felt252"
          },
          {
            "name": "account",
            "type": "core::starknet::contract_address::ContractAddress"
          }
        ],
        "outputs": [],
        "state_mutability": "external"
      },
      {
        "type": "function",
        "name": "revoke_role",
        "inputs": [
          {
            "name": "role",
            "type": "core::felt252"
          },
          {
            "name": "account",
            "type": "core::starknet::contract_address::ContractAddress"
          }
        ],
        "outputs": [],
        "state_mutability": "external"
      },
      {
        "type": "function",
        "name": "renounce_role",
        "inputs": [
          {
            "name": "role",
            "type": "core::felt252"
          },
          {
            "name": "account",
            "type": "core::starknet::contract_address::ContractAddress"
          }
        ],
        "outputs": [],
        "state_mutability": "external"
      }
    ]
  },
  {
    "type": "constructor",
    "name": "constructor",
    "inputs": [
      {
        "name": "admin_address",
        "type": "core::starknet::contract_address::ContractAddress"
      }
    ]
  },
  {
    "type": "event",
    "name": "openzeppelin_access::accesscontrol::accesscontrol::AccessControlComponent::RoleGranted",
    "kind": "struct",
    "members": [
      {
        "name": "role",
        "type": "core::felt252",
        "kind": "data"
      },
      {
        "name": "account",
        "type": "core::starknet::contract_address::ContractAddress",
        "kind": "data"
      },
      {
        "name": "sender",
        "type": "core::starknet::contract_address::ContractAddress",
        "kind": "data"
      }
    ]
  },
  {
    "type": "event",
    "name": "openzeppelin_access::accesscontrol::accesscontrol::AccessControlComponent::RoleGrantedWithDelay",
    "kind": "struct",
    "members": [
      {
        "name": "role",
        "type": "core::felt252",
        "kind": "data"
      },
      {
        "name": "account",
        "type": "core::starknet::contract_address::ContractAddress",
        "kind": "data"
      },
      {
        "name": "sender",
        "type": "core::starknet::contract_address::ContractAddress",
        "kind": "data"
      },
      {
        "name": "delay",
        "type": "core::integer::u64",
        "kind": "data"
      }
    ]
  },
  {
    "type": "event",
    "name": "openzeppelin_access::accesscontrol::accesscontrol::AccessControlComponent::RoleRevoked",
    "kind": "struct",
    "members": [
      {
        "name": "role",
        "type": "core::felt252",
        "kind": "data"
      },
      {
        "name": "account",
        "type": "core::starknet::contract_address::ContractAddress",
        "kind": "data"
      },
      {
        "name": "sender",
        "type": "core::starknet::contract_address::ContractAddress",
        "kind": "data"
      }
    ]
  },
  {
    "type": "event",
    "name": "openzeppelin_access::accesscontrol::accesscontrol::AccessControlComponent::RoleAdminChanged",
    "kind": "struct",
    "members": [
      {
        "name": "role",
        "type": "core::felt252",
        "kind": "data"
      },
      {
        "name": "previous_admin_role",
        "type": "core::felt252",
        "kind": "data"
      },
      {
        "name": "new_admin_role",
        "type": "core::felt252",
        "kind": "data"
      }
    ]
  },
  {
    "type": "event",
    "name": "openzeppelin_access::accesscontrol::accesscontrol::AccessControlComponent::Event",
    "kind": "enum",
    "variants": [
      {
        "name": "RoleGranted",
        "type": "openzeppelin_access::accesscontrol::accesscontrol::AccessControlComponent::RoleGranted",
        "kind": "nested"
      },
      {
        "name": "RoleGrantedWithDelay",
        "type": "openzeppelin_access::accesscontrol::accesscontrol::AccessControlComponent::RoleGrantedWithDelay",
        "kind": "nested"
      },
      {
        "name": "RoleRevoked",
        "type": "openzeppelin_access::accesscontrol::accesscontrol::AccessControlComponent::RoleRevoked",
        "kind": "nested"
      },
      {
        "name": "RoleAdminChanged",
        "type": "openzeppelin_access::accesscontrol::accesscontrol::AccessControlComponent::RoleAdminChanged",
        "kind": "nested"
      }
    ]
  },
  {
    "type": "event",
    "name": "openzeppelin_introspection::src5::SRC5Component::Event",
    "kind": "enum",
    "variants": []
  },
  {
    "type": "event",
    "name": "openzeppelin_upgrades::upgradeable::UpgradeableComponent::Upgraded",
    "kind": "struct",
    "members": [
      {
        "name": "class_hash",
        "type": "core::starknet::class_hash::ClassHash",
        "kind": "data"
      }
    ]
  },
  {
    "type": "event",
    "name": "openzeppelin_upgrades::upgradeable::UpgradeableComponent::Event",
    "kind": "enum",
    "variants": [
      {
        "name": "Upgraded",
        "type": "openzeppelin_upgrades::upgradeable::UpgradeableComponent::Upgraded",
        "kind": "nested"
      }
    ]
  },
  {
    "type": "event",
    "name": "starknet_indemnify::event_structs::event_structs::ClaimSubmitted",
    "kind": "struct",
    "members": [
      {
        "name": "claim_id",
        "type": "core::integer::u256",
        "kind": "key"
      },
      {
        "name": "policy_id",
        "type": "core::integer::u256",
        "kind": "data"
      },
      {
        "name": "claimant",
        "type": "core::starknet::contract_address::ContractAddress",
        "kind": "data"
      },
      {
        "name": "amount",
        "type": "core::integer::u256",
        "kind": "data"
      },
      {
        "name": "claim_type",
        "type": "starknet_indemnify::enums::enums::ClaimType",
        "kind": "data"
      }
    ]
  },
  {
    "type": "event",
    "name": "starknet_indemnify::event_structs::event_structs::ClaimUpdated",
    "kind": "struct",
    "members": [
      {
        "name": "claim_id",
        "type": "core::integer::u256",
        "kind": "key"
      },
      {
        "name": "policy_id",
        "type": "core::integer::u256",
        "kind": "data"
      },
      {
        "name": "claimant",
        "type": "core::starknet::contract_address::ContractAddress",
        "kind": "data"
      },
      {
        "name": "amount",
        "type": "core::integer::u256",
        "kind": "data"
      },
      {
        "name": "claim_type",
        "type": "starknet_indemnify::enums::enums::ClaimType",
        "kind": "data"
      }
    ]
  },
  {
    "type": "event",
    "name": "starknet_indemnify::event_structs::event_structs::ClaimRepudiated",
    "kind": "struct",
    "members": [
      {
        "name": "claim_id",
        "type": "core::integer::u256",
        "kind": "key"
      },
      {
        "name": "denier",
        "type": "core::starknet::contract_address::ContractAddress",
        "kind": "data"
      },
      {
        "name": "reason",
        "type": "starknet_indemnify::enums::enums::ClaimRepudiationReason",
        "kind": "data"
      }
    ]
  },
  {
    "type": "event",
    "name": "starknet_indemnify::event_structs::event_structs::ClaimApproved",
    "kind": "struct",
    "members": [
      {
        "name": "claim_id",
        "type": "core::integer::u256",
        "kind": "key"
      },
      {
        "name": "approver",
        "type": "core::starknet::contract_address::ContractAddress",
        "kind": "data"
      },
      {
        "name": "amount",
        "type": "core::integer::u256",
        "kind": "data"
      },
      {
        "name": "timestamp",
        "type": "core::integer::u64",
        "kind": "data"
      }
    ]
  },
  {
    "type": "event",
    "name": "starknet_indemnify::event_structs::event_structs::ClaimPaid",
    "kind": "struct",
    "members": [
      {
        "name": "claim_id",
        "type": "core::integer::u256",
        "kind": "key"
      },
      {
        "name": "recipient",
        "type": "core::starknet::contract_address::ContractAddress",
        "kind": "data"
      },
      {
        "name": "amount",
        "type": "core::integer::u256",
        "kind": "data"
      },
      {
        "name": "tx_hash",
        "type": "core::felt252",
        "kind": "data"
      }
    ]
  },
  {
    "type": "event",
    "name": "starknet_indemnify::event_structs::event_structs::ClaimEscalated",
    "kind": "struct",
    "members": [
      {
        "name": "claim_id",
        "type": "core::integer::u256",
        "kind": "key"
      },
      {
        "name": "escalator",
        "type": "core::starknet::contract_address::ContractAddress",
        "kind": "data"
      },
      {
        "name": "reason",
        "type": "core::byte_array::ByteArray",
        "kind": "data"
      }
    ]
  },
  {
    "type": "event",
    "name": "starknet_indemnify::contracts::claims_contract::InsuranceClaims::Event",
    "kind": "enum",
    "variants": [
      {
        "name": "AccessControlEvent",
        "type": "openzeppelin_access::accesscontrol::accesscontrol::AccessControlComponent::Event",
        "kind": "flat"
      },
      {
        "name": "SRC5Event",
        "type": "openzeppelin_introspection::src5::SRC5Component::Event",
        "kind": "flat"
      },
      {
        "name": "UpgradeableEvent",
        "type": "openzeppelin_upgrades::upgradeable::UpgradeableComponent::Event",
        "kind": "flat"
      },
      {
        "name": "ClaimSubmitted",
        "type": "starknet_indemnify::event_structs::event_structs::ClaimSubmitted",
        "kind": "nested"
      },
      {
        "name": "ClaimUpdated",
        "type": "starknet_indemnify::event_structs::event_structs::ClaimUpdated",
        "kind": "nested"
      },
      {
        "name": "ClaimDenied",
        "type": "starknet_indemnify::event_structs::event_structs::ClaimRepudiated",
        "kind": "nested"
      },
      {
        "name": "ClaimApproved",
        "type": "starknet_indemnify::event_structs::event_structs::ClaimApproved",
        "kind": "nested"
      },
      {
        "name": "ClaimPaid",
        "type": "starknet_indemnify::event_structs::event_structs::ClaimPaid",
        "kind": "nested"
      },
      {
        "name": "ClaimEscalated",
        "type": "starknet_indemnify::event_structs::event_structs::ClaimEscalated",
        "kind": "nested"
      }
    ]
  }
]